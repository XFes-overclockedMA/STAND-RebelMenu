------------------------------------------------------------------------------------------------------------------------------
--                                                                                                                          --
--Version:                                                                                                                  --
--0.1                                                                                                                       --
--Build Date:                                                                                                               --
--12/04/23                                                                                                                  --
-----powered By = разогнанный = OverclockedMA                                                                               --
------------------------------------------------------------------------------------------------------------------------------
--THE PURGE V3.9<3                                                                                                          --
-- Welcome on my CODE                                                                                                       --  
-- This OPEN SOURCE PROVIDED YOU MENTION ME IN YOUR PROJECTS                                                                --  
--> Thanks :) <3                                                                                                            --
------------------------------------------------------------------------------------------------------------------------------


util.keep_running() 
util.require_natives("natives-1676318796")

-----------------------------------------------------------------------------------------------
---------------NOTIFY LAUNCH SVT.PLUTO
util.toast("Hi, " .. players.get_name(players.user()) .. "! \nWelcome To Rebel Menu- Theme")
-----------------------------------------------------------------------------------------------
---------------SPLASH SCREEN REPERTORY
HC_DIR = filesystem.resources_dir() .. "#xfes-lib-theme\\rebelmenu\\"

svtloading = {
    Img = HC_DIR .. "loading\\",
}
-----------------------------------------------------------------------------------------------------------------------------------
--------------- LOAD SPLASH IMG
function SHOW_IMG(img_name, max_passed_time) ----------------------------------------------Credit goes to LanceScript Reloaded (THANKS, LanceScript Team :) <3 )
    if filesystem.exists(svtloading.Img .. img_name) then
        local ImgAlpha = 0
        local IncreasedImgAlpha = 0.01
        util.create_tick_handler(function()
            ImgAlpha = ImgAlpha + IncreasedImgAlpha
            if ImgAlpha > 1 then
                ImgAlpha = 1
            elseif ImgAlpha < 0 then 
                ImgAlpha = 0
                return false
            end
        end)
        local Img = directx.create_texture(svtloading.Img .. img_name)
        local StartedTime = os.clock()
        util.create_tick_handler(function()
            directx.draw_texture(Img, 0.07, 0.07, 0.5, 0.5, 0.5, 0.5, 0, 1, 1, 1, ImgAlpha)
            local PassedTime = os.clock() - StartedTime
            if PassedTime > max_passed_time then
                IncreasedImgAlpha = -0.01
            end
            if ImgAlpha == 0 then
                return false
            end
        end)
    end
end
if SCRIPT_MANUAL_START and not SCRIPT_SILENT_START then
    SHOW_IMG("rebelload.png", 3.0)
    GRAPHICS.ANIMPOSTFX_PLAY("FocusOut", 0, 0)
end
-----------------------------------------------------------------------------------------------------------------------------------
--------------- LOAD XBOX AC
function SHOW_IMG(img_name, max_passed_time) ----------------------------------------------Credit goes to LanceScript Reloaded (THANKS, LanceScript Team :) <3 )
    if filesystem.exists(svtloading.Img .. img_name) then
        local ImgAlpha = 0
        local IncreasedImgAlpha = 0.01
        util.create_tick_handler(function()
            ImgAlpha = ImgAlpha + IncreasedImgAlpha
            if ImgAlpha > 1 then
                ImgAlpha = 1
            elseif ImgAlpha < 0 then 
                ImgAlpha = 0
                return false
            end
        end)

        local Img = directx.create_texture(svtloading.Img .. img_name)
        local StartedTime = os.clock()
        util.create_tick_handler(function()
            directx.draw_texture(Img, 0.07, 0.05, 1.5, 4.8, 0.5, 0.5, 0, 1, 1, 1, ImgAlpha)
            local PassedTime = os.clock() - StartedTime
            if PassedTime > max_passed_time then
                IncreasedImgAlpha = -0.01
            end
            if ImgAlpha == 0 then
                return false
            end
        end)
    end
end
if SCRIPT_MANUAL_START and not SCRIPT_SILENT_START then
    SHOW_IMG("loadachivement.png", 3.0)
    
end
-----------------------------------------------------------------------------------------------------------------------------------
---------------PROFILE STAND 
menu.trigger_commands("reloadtextures")
menu.trigger_commands("reloadfont")
----------------------------------------------HEADER
menu.trigger_commands("header hide")
----------------------------------------------TABS
menu.trigger_commands("tabs on")
menu.trigger_commands("tabswidth 60")
menu.trigger_commands("tabsheight 25")
menu.trigger_commands("tabsposition top")
menu.trigger_commands("tabstextscale 12")
menu.trigger_commands("tabstextxoffset 15")
menu.trigger_commands("tabstextyoffset 5")
menu.trigger_commands("tabsalignment left")
menu.trigger_commands("tabsname off")
menu.trigger_commands("tabslefticon on")
menu.trigger_commands("tabsrighticon off")
----------------------------------------------ADRESSE
menu.trigger_commands("addressbar off")
menu.trigger_commands("cursorpos on")
----------------------------------------------POSITION
menu.trigger_commands("menux 1350")
menu.trigger_commands("menuy 132")
----------------------------------------------APPEARANCE MAIN 
menu.trigger_commands("spacersize 15")
menu.trigger_commands("blur 0")
menu.trigger_commands("smoothscroll 110")
menu.trigger_commands("listwidth 420")
menu.trigger_commands("listheight 31")
menu.trigger_commands("menuheight 22")
----------------------------------------------PRIMARY COLOR
menu.trigger_commands("backgroundopacity 0")
menu.trigger_commands("primary #000000")
menu.trigger_commands("primaryopacity 100")
----------------------------------------------NOTIFICATIONS 
menu.trigger_commands("notifywidth 340")
menu.trigger_commands("notifyborder #3C40C6")
menu.trigger_commands("notifyflash #3C40C6")
menu.trigger_commands("notifybg 141414FF")
-----------------------------------------------------------------------------------------------------------------------------------
--------------- DIVIDER HEADER
menu.divider(menu.my_root(), ("The Rebel Menu - Setting"))
menu.divider(menu.my_root(), ("---------------Title - Setting---------------"))
TitleR = menu.slider(menu.my_root(), ("Title Custom"), {"rebeltitle"}, "Customize Title", 0, 1, 0, 1, function(); end)
menu.divider(menu.my_root(), ("---------------RGB - Color---------------"))
-----------------------------------------------------------------------------------------------------------------------------------
--------------- STRING COLOR BORDER AND TITLE
rect_colourtb= {
	["r"] = 60 / 255,
	["g"] = 64 / 255,
	["b"] = 198 / 255,
	["a"] = 1
}
-----------------------------------------------------------------------------------------------------------------------------------
--------------- MENU CUSTOM PURGE COLOR 
c = menu.colour(menu.my_root(), "Rebel Custom Color", {"rebeldxrecth"}, "Customize the color of the theme to have a menu that looks like you.", rect_colourtb, true, function(colour)
	rect_colourtb = colour
end)
menu.rainbow(c)
-----------------------------------------------------------------------------------------------------------------------------------
--------------- STRING COLOR Background
rect_colour= {
	["r"] = 60 / 255,
	["g"] = 64 / 255,
	["b"] = 198 / 255,
	["a"] = 100 / 255
}
-----------------------------------------------------------------------------------------------------------------------------------
--------------- DIVIDER HEADER
menu.divider(menu.my_root(), ("---------------RGB BACKGROUND - Color---------------"))
-----------------------------------------------------------------------------------------------------------------------------------
--------------- MENU CUSTOM PURGE COLOR HEADER
d = menu.colour(menu.my_root(), "Rebel Background Color", {"rebeldxrectb"}, "Customize the color of the theme to have a menu that looks like you.", rect_colour, true, function(colour)
	rect_colour = colour
end)
menu.rainbow(d)
-----------------------------------------------------------------------------------------------------------------------------------
--------------- DIVIDER Click UI
menu.divider(menu.my_root(), ("---------------Stand Setting---------------"))
-----------------------------------------------------------------------------------------------------------------------------------
--------------- SEARCH MOUSE SETTINGS
menu.action(menu.my_root(), "Mouse Support ", {}, "Shortcut to the settings for the Mouse Support.", function(on_click)
    menu.trigger_commands("search Mouse Support")
 end)
-----------------------------------------------------------------------------------------------------------------------------------
--------------- SEARCH CURSOR SETTING
 menu.action(menu.my_root(), "Cursor Bar", {}, "Shortcut to the settings for the overlay.", function(on_click)
 util.toast("[REBEL] - Stand>Settings>Appearance and colors>Primary.")
menu.focus(menu.ref_by_path("Stand>Settings>Appearance"), function() end)
end)
--------------- DIVIDER RESET OPTION
menu.divider(menu.my_root(), ("---------------Reset---------------"))
-----------------------------------------------------------------------------------------------------------------------
--------------- RESET COLOR REBEL BTN
menu.action(menu.my_root(), "REBEL Orignal Color", {}, "Reset color to have the original color.", function()
    util.toast("[REBEL] - Original color well applied.")
    menu.trigger_commands("rebeldxrecthrainbow 0")
   menu.trigger_commands("rebeldxrectbrainbow 0")
   
    menu.trigger_commands("rebeldxrecthred 60")
    menu.trigger_commands("rebeldxrecthgreen 64")
    menu.trigger_commands("rebeldxrecthblue 198")

    menu.trigger_commands("rebeldxrectbopacity 100")
    menu.trigger_commands("rebeldxrectbred 60")
    menu.trigger_commands("rebeldxrectbgreen 64")
    menu.trigger_commands("rebeldxrectbblue 198")
   

end)
-----------------------------------------------------------------------------------------------------------------------------------
--------------- DIVISER Background
HC_VERSION = "V0.1"
menu.divider(menu.my_root(), ("-------------------------------------------"))
menu.divider(menu.my_root(), ("By XFes-OverclockedMA") .. " " .. HC_VERSION)
-----------------------------------------------------------------------------------------------------------------------------------
--------------- DRAW TEXTURE
while true do
	if menu.is_open() then
		x, y, w, h = menu.get_main_view_position_and_size()
----------------------------------------------BACKGROUND
directx.draw_rect(
x,-- x
y - (103 / 1080),-- y
w,-- width
820 / 1080,-- height
rect_colour-- colour
)    
----------------------------------------------BORDER LEFT
directx.draw_rect(
x - (4 / 1080),-- x
y - (95 / 1080),-- y
w - (232 / 1080),-- width
810 / 1080,-- height
rect_colourtb-- colour
)   
----------------------------------------------BORDER RIGHT
directx.draw_rect(
x + (236 / 1080),-- x
y - (95 / 1080),-- y
w - (232 / 1080),-- width
810 / 1080,-- height
rect_colourtb-- colour
)  
----------------------------------------------BORDER TOP
directx.draw_rect(
x - (4 / 1080),-- x
y - (103 / 1080),-- y
w +(8 / 1080) ,-- width
8 / 1080,-- height
rect_colourtb	-- colour
)   
----------------------------------------------BORDER BOTTOM
directx.draw_rect(
x - (4 / 1080),-- x
y + (715 / 1080),-- y
w +(8 / 1080) ,-- width
8 / 1080,-- height
rect_colourtb	-- colour
)   
----------------------------------------------TITLE
 rb = menu.get_value(TitleR)
      if rb  == 1 then 
directx.draw_text(
x + (115 / 1080),-- x
y - (65 / 1080),-- y
"Crack Menu",-- text
ALIGN_CENTRE ,-- alignment
1.555,-- scale					
rect_colourtb-- colour		
)
else 
directx.draw_text(
x + (115 / 1080),-- x
y - (65 / 1080),-- y
"Rebel Menu",-- text
ALIGN_CENTRE ,-- alignment
1.555,-- scale					
rect_colourtb-- colour		
)
end
----------------------------------------------LICENSE
directx.draw_text(
x + (115 / 1080),-- x
y + (695 / 1080),-- y
"Lifetime",-- text
ALIGN_CENTRE ,-- alignment
1.0,-- scale					
rect_colourtb-- colour		
)
----------------------------------------------CURSOR LIST
directx.draw_text(
x + (225 / 1080),-- x
y - (53 / 1080),-- y
menu.get_active_list_cursor_text(),-- text
ALIGN_CENTRE ,-- alignment
0.7,-- scale		
rect_colourtb-- colour
)
----------------------------------------------ITEM
directx.draw_text(
x + (205 / 1080),-- x
y - (53 / 1080),-- y
"Item:",-- text
ALIGN_CENTRE ,-- alignment
0.7,-- scale					
rect_colourtb-- colour		
)
----------------------------------------------MAIN MENU 
directx.draw_text(
x + (25 / 1080),-- x
y - (53 / 1080),-- y
"Main menu",-- text
ALIGN_CENTRE ,-- alignment
0.7,-- scale					
rect_colourtb-- colour		
)  
	end
	util.yield()
end


